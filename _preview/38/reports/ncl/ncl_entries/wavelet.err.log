Traceback (most recent call last):
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Compare Complex Morlet NCL to PyWavelets
import pywt  # PyWavelets
import numpy as np
import math
import cmath
import matplotlib.pyplot as plt  # plot data


def complex_morlet_pywavelets(time_step, B, C):
    # https://pywavelets.readthedocs.io/en/latest/ref/cwt.html#complex-morlet-wavelets
    part1 = 1 / np.sqrt(math.pi * B)
    part2 = math.exp(-np.power(time_step, 2) / B)
    part3 = cmath.exp(1j * 2 * math.pi * C * time_step)
    return part1 * part2 * part3


def tc_morlet(time_step):
    # Table 1: https://psl.noaa.gov/people/gilbert.p.compo/Torrence_compo1998.pdf
    i = np.sqrt(-1 + 0j)  # complex i
    omega = 6  # w, nondimensional frequency, defaults to 6 (~2pi)
    eta = time_step  # n, wavelet function nondimensional "time" parameter
    part1 = np.power(math.pi, -1 / 4)
    part2 = cmath.exp(i * omega * eta)
    part3 = math.exp(-np.power(eta, 2) / 2)
    return part1 * part2 * part3


def morlet_pywavelets(time_step):
    # https://pywavelets.readthedocs.io/en/latest/ref/cwt.html#morlet-wavelet
    # 'morl'
    part1 = math.exp(-np.power(time_step, 2) / 2)
    part2 = math.cos(5 * time_step)
    return part1 * part2


bandwidth = 2
center_freq = 6 / (2 * math.pi)  # C * 2 * pi = 2 * pi = approx 6 (morlet default)
amp_multiply = math.sqrt(2) * np.power(math.pi, 1 / 4)

complex_morlet = f"cmor{bandwidth}-{center_freq}"
[psi, x] = pywt.ContinuousWavelet(complex_morlet).wavefun(10)
[psi_default, x_default] = pywt.ContinuousWavelet(
    f"cmor{math.sqrt(math.pi)}-{center_freq}"
).wavefun(10)
[psi_m, x_m] = pywt.ContinuousWavelet('morl').wavefun(10)

tc_output = []
mor_pywt_output = []
cmor_pywt_output = []
for x_value in x:
    tc_output.append(tc_morlet(x_value))
    mor_pywt_output.append(morlet_pywavelets(x_value))
    cmor_pywt_output.append(complex_morlet_pywavelets(x_value, bandwidth, center_freq))

fig, ax = plt.subplots(figsize=(10, 10))
ax.plot(x, np.real(psi_default), label="PYWT cmorSQRT(pi)-6/(2*pi)", c="green")
ax.plot(x, np.real(tc_output), label="TC Morlet", c="red")
plt.title(f"PYWT cmor{math.sqrt(math.pi)}-{6/(2*math.pi)} and TC (Complex) Morlet")
ax.axhline(0, linestyle='--', alpha=0.3)
ax.legend()
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 2[0m
[1;32m      1[0m [38;5;66;03m# Compare Complex Morlet NCL to PyWavelets[39;00m
[0;32m----> 2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpywt[39;00m  [38;5;66;03m# PyWavelets[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01mmath[39;00m

[0;31mModuleNotFoundError[0m: No module named 'pywt'

