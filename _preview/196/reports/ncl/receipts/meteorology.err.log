Traceback (most recent call last):
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#### Collect NCL values for relhum_water from geocat-datafiles
import geocat.datafiles as gdf
import numpy as np

# relhum_water_data = gdf.get('applications_files/ncl_outputs/relhum_water_output.txt')
relhum_water_data = np.loadtxt(
    "../ncl_raw/relhum_water_output.txt", delimiter=',', skiprows=6
)
------------------


[31m---------------------------------------------------------------------------[39m
[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[25][39m[32m, line 6[39m
[32m      3[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mnp[39;00m
[32m      5[39m [38;5;66;03m# relhum_water_data = gdf.get('applications_files/ncl_outputs/relhum_water_output.txt')[39;00m
[32m----> [39m[32m6[39m relhum_water_data = [43mnp[49m[43m.[49m[43mloadtxt[49m[43m([49m
[32m      7[39m [43m    [49m[33;43m"[39;49m[33;43m../ncl_raw/relhum_water_output.txt[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43mdelimiter[49m[43m=[49m[33;43m'[39;49m[33;43m,[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mskiprows[49m[43m=[49m[32;43m6[39;49m
[32m      8[39m [43m)[49m

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/numpy/lib/_npyio_impl.py:1395[39m, in [36mloadtxt[39m[34m(fname, dtype, comments, delimiter, converters, skiprows, usecols, unpack, ndmin, encoding, max_rows, quotechar, like)[39m
[32m   1392[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(delimiter, [38;5;28mbytes[39m):
[32m   1393[39m     delimiter = delimiter.decode([33m'[39m[33mlatin1[39m[33m'[39m)
[32m-> [39m[32m1395[39m arr = [43m_read[49m[43m([49m[43mfname[49m[43m,[49m[43m [49m[43mdtype[49m[43m=[49m[43mdtype[49m[43m,[49m[43m [49m[43mcomment[49m[43m=[49m[43mcomment[49m[43m,[49m[43m [49m[43mdelimiter[49m[43m=[49m[43mdelimiter[49m[43m,[49m
[32m   1396[39m [43m            [49m[43mconverters[49m[43m=[49m[43mconverters[49m[43m,[49m[43m [49m[43mskiplines[49m[43m=[49m[43mskiprows[49m[43m,[49m[43m [49m[43musecols[49m[43m=[49m[43musecols[49m[43m,[49m
[32m   1397[39m [43m            [49m[43munpack[49m[43m=[49m[43munpack[49m[43m,[49m[43m [49m[43mndmin[49m[43m=[49m[43mndmin[49m[43m,[49m[43m [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m
[32m   1398[39m [43m            [49m[43mmax_rows[49m[43m=[49m[43mmax_rows[49m[43m,[49m[43m [49m[43mquote[49m[43m=[49m[43mquotechar[49m[43m)[49m
[32m   1400[39m [38;5;28;01mreturn[39;00m arr

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/numpy/lib/_npyio_impl.py:1022[39m, in [36m_read[39m[34m(fname, delimiter, comment, quote, imaginary_unit, usecols, skiplines, max_rows, converters, ndmin, unpack, dtype, encoding)[39m
[32m   1020[39m     fname = os.fspath(fname)
[32m   1021[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(fname, [38;5;28mstr[39m):
[32m-> [39m[32m1022[39m     fh = [43mnp[49m[43m.[49m[43mlib[49m[43m.[49m[43m_datasource[49m[43m.[49m[43mopen[49m[43m([49m[43mfname[49m[43m,[49m[43m [49m[33;43m'[39;49m[33;43mrt[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m)[49m
[32m   1023[39m     [38;5;28;01mif[39;00m encoding [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m   1024[39m         encoding = [38;5;28mgetattr[39m(fh, [33m'[39m[33mencoding[39m[33m'[39m, [33m'[39m[33mlatin1[39m[33m'[39m)

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/numpy/lib/_datasource.py:192[39m, in [36mopen[39m[34m(path, mode, destpath, encoding, newline)[39m
[32m    155[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    156[39m [33;03mOpen `path` with `mode` and return the file object.[39;00m
[32m    157[39m 
[32m   (...)[39m[32m    188[39m 
[32m    189[39m [33;03m"""[39;00m
[32m    191[39m ds = DataSource(destpath)
[32m--> [39m[32m192[39m [38;5;28;01mreturn[39;00m [43mds[49m[43m.[49m[43mopen[49m[43m([49m[43mpath[49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m[43m [49m[43mnewline[49m[43m=[49m[43mnewline[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/numpy/lib/_datasource.py:529[39m, in [36mDataSource.open[39m[34m(self, path, mode, encoding, newline)[39m
[32m    526[39m     [38;5;28;01mreturn[39;00m _file_openers[ext](found, mode=mode,
[32m    527[39m                               encoding=encoding, newline=newline)
[32m    528[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m529[39m     [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m([33mf[39m[33m"[39m[38;5;132;01m{[39;00mpath[38;5;132;01m}[39;00m[33m not found.[39m[33m"[39m)

[31mFileNotFoundError[39m: ../ncl_raw/relhum_water_output.txt not found.

